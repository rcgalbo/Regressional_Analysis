#example 1.2
firedam <- "FIREDAM.txt"
FIREDAM <- read.table(firedam, header = TRUE)
#plot the data
plot(FIREDAM$DISTANCE,FIREDAM$DAMAGE, xlab = 'Distance from Firehouse', ylab = 'Damage Caused', main = 'Scatter and Regression of Geese and Digestion Efficiency')
#include the least squares regression
abline(lm(DAMAGE~DISTANCE, data = FIREDAM))
#create the linear model
linearmodel <- lm(DAMAGE~DISTANCE, data = FIREDAM)
#get an analysis of variance and a summary of the variables
anova(linearmodel)
summary(linearmodel)
#give predictions
predict.lm(linearmodel, level= 0.95, interval = "predict", se.fit = TRUE)
#obtain the residules
resid(linearmodel)
firedam <- "FIREDAM.txt"
setwd("C:\Users\Rick\Documents\STAT308\Regressional_Analysis\DATA")
setwd("C:\\Users\\Rick\\Documents\\STAT308\\Regressional_Analysis\\DATA")
#example 1.2
firedam <- "FIREDAM.txt"
FIREDAM <- read.table(firedam, header = TRUE)
#plot the data
plot(FIREDAM$DISTANCE,FIREDAM$DAMAGE, xlab = 'Distance from Firehouse', ylab = 'Damage Caused', main = 'Scatter and Regression of Geese and Digestion Efficiency')
#include the least squares regression
abline(lm(DAMAGE~DISTANCE, data = FIREDAM))
#create the linear model
linearmodel <- lm(DAMAGE~DISTANCE, data = FIREDAM)
#get an analysis of variance and a summary of the variables
anova(linearmodel)
summary(linearmodel)
#give predictions
predict.lm(linearmodel, level= 0.95, interval = "predict", se.fit = TRUE)
#obtain the residules
resid(linearmodel)
#multiple linear regression
gfclocks <- "GFCLOCKS.txt"
GFCLOCKS <- read.table(gfclocks, header = TRUE)
#create two scatters
par(mfrow = c(1,2))
plot(GFCLOCKS$AGE, GFCLOCKS$PRICE, main = "Scatterplot of Price vs Age")
plot(GFCLOCKS$NUMBIDS, GFCLOCKS$PRICE, main = "Scatterplot of Price vs Number of Bids")
#multi-variable linear model
multimodel <- lm(PRICE~AGE+NUMBIDS, data = GFCLOCKS)
summary(multimodel)
anova(multimodel)
#now including the interaction term
multimodelint <- lm(PRICE~ AGE + NUMBIDS + AGE.BID, data = GFCLOCKS)
summary(multimodelint)
anova(multimodelint)
#Quadratic Model with a Quantative Predictor for Immunity and Fitness Data
AEROBIC <- read.table("AEROBIC.txt", header = TRUE)
quadmodel <- lm(IGG~MAXOXY + I(MAXOXY^2), data = AEROBIC)
summary(quadmodel)
anova(quadmodel)
plot(AEROBIC$MAXOXY, AEROBIC$IGG, xlab = "MAXOXY", ylab = "IGG", main = "Scatterplot")
points(AEROBIC$MAXOXY, fitted(quadmodel), col = "red")
#complete second order model
EXPRESS <- read.table("EXPRESS.txt", header = TRUE)
CQuadModel <- lm(Cost~Weight * Distance + I(Weight^2) + I(Distance^2), data = EXPRESS)
summary(CQuadModel)
#using 3 level qualatative variables to produce model
CARGO <- read.table("CARGO.txt", header = TRUE)
QualModel <- lm(COST ~ X1 + X2, data = CARGO)
summary(QualModel)
anova(QualModel)
contrasts(CARGO$CARGO)
#using the cargo data stream to create a qualmodel
QualModel1 <- lm(COST~ factor(CARGO), data = CARGO)
summary(QualModel1)
#comparing nested models (complete vs reduced models)
#calculating f stat
quadmodel <- lm(Cost~Weight*Distance, data = EXPRESS)
anova(quadmodel)
#getting F stat using anova
anova(quadmodel,CQuadModel)
